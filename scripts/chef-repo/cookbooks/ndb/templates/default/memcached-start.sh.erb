#!/bin/sh 

if [ "$1" = "--force" ] ; then
    killall memcached
fi

echo "Testing if a memcached server is already running...."
PID_FILE=<% node[:ndb][:log_dir] %>/memcached.pid
if [ -f $PID_FILE  ] ; then 
    PID=`cat $PID_FILE`
    kill -0 $PID
    if [ $? -ne 0 ] ; then
	echo "Memcached server is already running on this node. Run 'memcached-start.sh --force' to kill existing servers and start a new one."
	exit 1
    fi
else
  echo "No process running at PID from: $PID_FILE"
fi

echo "Starting the memcached server...."
# See full list of configuration options for memcached engine here:
# http://dev.mysql.com/doc/ndbapi/en/ndbmemcache-configuration.html
# TODO - it appears the -p switch to write the PID to a file doesn't work.
<%= node[:mysql][:base_dir] %>/bin/memcached -d -p <% node[:ndb][:log_dir] %>/memcached.pid -u <%= node[:ndb][:user]  %> -E <%= node[:mysql][:base_dir] %>/lib/ndb_engine.so -e "connectstring=<%= node[:ndb][:connect_string]  %>;m=<%= node[:memcached][:mem_size] %><%= node[:memcached][:options]  %>" 1> <%= node[:ndb][:log_dir] %>/memcached.err.log 2> <%= node[:ndb][:log_dir] %>/memcached.out.log  &
RES=$?
if [ $RES -eq 0 ] ; then
    echo $! > <% node[:ndb][:log_dir] %>/memcached.pid
else 
 echo "Problem starting memcached, returned $RES."
 exit 1
fi

exit 0
