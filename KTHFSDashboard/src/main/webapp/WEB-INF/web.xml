<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
             
    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
<!--        <param-value>Production</param-value>-->
    </context-param>
    <context-param>
        <param-name>com.sun.faces.verifyObjects</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>com.sun.faces.validateXml</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>client</param-value>
    </context-param>    
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>/faces/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>index.xhtml</welcome-file>
    </welcome-file-list>
    


    <!--  REST  -->
    
    <servlet>
        <servlet-name>Jersey REST Service</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>se.kth.kthfsdashboard.rest.resources</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>

    
    <!-- declare the roles relevant for our webapp -->
    <security-role>
        <role-name>ADMIN</role-name>
    </security-role>
    <security-role>
        <role-name>USER</role-name>
    </security-role>
    <security-role>
        <role-name>AGENT</role-name>
    </security-role>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secured Content</web-resource-name>
            <url-pattern>/sauron/*</url-pattern>
        </web-resource-collection>
      
        <auth-constraint>
            <role-name>ADMIN</role-name>
            <role-name>USER</role-name>
        </auth-constraint>
  
        <!-- we always want https! -->
        <!--        <user-data-constraint>
            <description>highest supported transport security level</description>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>-->
    </security-constraint>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secured Content</web-resource-name>
            <url-pattern>/admin/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>ADMIN</role-name>
        </auth-constraint>
    </security-constraint>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secured Content for REST agents sending alerts data</web-resource-name>
            <url-pattern>/rest/collectd/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>AGENT</role-name>
            <role-name>ADMIN</role-name>            
        </auth-constraint>
        <user-data-constraint>
            <description>SSL Support</description>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>        
    </security-constraint>                  
            
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secured Content for REST agents sending status data</web-resource-name>
            <url-pattern>/rest/agent/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>AGENT</role-name>
            <role-name>ADMIN</role-name>            
        </auth-constraint>
<!--        <user-data-constraint>
            <description>SSL Support</description>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint> -->
    </security-constraint>
                                  
                     
    <login-config>
        <!--<auth-method>FORM</auth-method>-->
        <auth-method>BASIC</auth-method>
        <realm-name>DBRealm</realm-name>
        <form-login-config>
            <form-login-page>/index.xhtml</form-login-page>
            <form-error-page>/loginError.xhtml</form-error-page>
        </form-login-config>
    </login-config>
   
    <session-config>
        <!-- on production systems you might have another value for the timeout -->
        <session-timeout>20</session-timeout>
        <!-- 
           we don't want to use the default name JSESSIONID because this 
           tells everyone (especially hackers) that our application is based on java 
        -->
        <cookie-config>
            <name>SESSIONID</name>
        </cookie-config>
    </session-config>    
    
    <!-- <security-constraint>
        <web-resource-collection>
            <web-resource-name>CollectdResource</web-resource-name>
            <url-pattern>/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>*</role-name> 
        </auth-constraint>
    </security-constraint>-->
    
</web-app>
